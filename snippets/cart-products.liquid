{% assign block_settings = block.settings %}

<script
  src="{{ 'component-cart-items.js' | asset_url }}"
  type="module"
  fetchpriority="low"
></script>

<div
  {{ block.shopify_attributes }}
  class="cart-items__wrapper"
  style="
    {% if settings.product_title_case == 'uppercase' %}
      --product-title-case: uppercase;
    {% endif %}
    {% if settings.show_buy_x_get_y_discount %}
      --buy-x-get-y-icon-active-bg: {{ settings.buy_x_get_y_icon_active_background | default: '#000000'}};
    {% endif %}
    "
>
  {% if cart.empty? %}
    {%- if shop.customer_accounts_enabled and customer == null -%}
      <p>
        {{ 'actions.log_in_html' | t: link: routes.account_login_url }}
      </p>
    {%- endif -%}

    <a
      class="button cart-items__empty-button"
      href="{{ routes.all_products_collection_url }}"
    >
      {{ 'actions.continue_shopping' | t }}
    </a>
  {%- else -%}
    <span
      class="visually-hidden"
      ref="cartItemCount"
      aria-hidden="true"
    >
      {{- cart.item_count -}}
    </span>
    <form
      action="{{ routes.cart_url }}"
      class="cart-form"
      id="cart-form"
      method="post"
    >
      <div
        class="cart-items spacing-style{% if block_settings.dividers %} cart-items--dividers{% endif %}"
        style="{%  render 'spacing-style', settings: block_settings %} --cart-items-gap:{{ block_settings.gap | append: "px" }};"
      >
        <ul class="cart-items__list">
          {% for item in cart.items %}
            <li
              class="cart-items__item{% if item.parent_relationship.parent != null %} cart-items__nested-line{% endif %}"
              ref="cartItemRows[]"
              data-parent-key="{{ item.parent_relationship.parent.key }}"
              data-key="{{ item.key }}"
            >
              <div class="cart-items__item-content">
                <a class="cart-items__product-link" href="{{ item.url }}">
                  <div class="cart-items__media-container">
                    {% if item.image or item.properties.preview_image != blank -%}
                      {% liquid
                        assign ratio = 1
                        assign border_opacity = settings.cart_thumbnail_border_opacity | divided_by: 100.0
                        assign border_override = '--border-width: [cart_thumbnail_border_width]px; --border-style: [cart_thumbnail_border_style]; --border-color: rgb(var(--color-border-rgb) / [cart_thumbnail_border_opacity]); --border-radius: [cart_thumbnail_border_radius]px;' | replace: '[cart_thumbnail_border_width]', settings.cart_thumbnail_border_width | replace: '[cart_thumbnail_border_style]', settings.cart_thumbnail_border | replace: '[cart_thumbnail_border_opacity]', border_opacity | replace: '[cart_thumbnail_border_radius]', settings.cart_thumbnail_border_radius

                        if settings.cart_thumbnail_border_radius > 0
                          assign border_override = border_override | append: ' overflow: hidden;'
                        endif
                        if block_settings.image_ratio == 'portrait'
                          assign ratio = 0.8
                        elsif block_settings.image_ratio == 'adapt'
                          if item.image
                            assign ratio = item.image.aspect_ratio
                          else
                            assign ratio = 1
                          endif
                        endif
                      %}
                      {%- if item.properties.preview_image != blank -%}
                        {%- liquid
                          assign preview_width = 64
                          assign preview_height = preview_width | divided_by: ratio | round
                        -%}
                        <img
                          src="{{ item.properties.preview_image }}"
                          width="{{ preview_width }}"
                          height="{{ preview_height }}"
                          class="cart-items__media-image border-style"
                          style="{{ border_override }}"
                          alt="{{ item.product.title | escape }}"
                          loading="lazy"
                          decoding="async"
                        >
                      {%- else -%}
                        {%- liquid
                          echo item.image | image_url: width: 64 | image_tag: class: 'cart-items__media-image border-style', style: border_override, loading: 'lazy', decoding: 'async'
                        -%}
                      {%- endif -%}
                    {%- endif %}
                  </div>

                  <div class="cart-items__details cart-primary-typography">
                    <span class="cart-items__title">
                      {{- item.product.title -}}
                    </span>

                    {%- if item.product.has_only_default_variant == false
                      or item.properties.size != 0
                      or item.selling_plan_allocation != null
                    -%}
                      {%- if item.product.has_only_default_variant == false and item.item_components.size == 0 -%}
                        <p class="cart-items__variants">
                          {%- for option in item.options_with_values -%}
                            {{- option.value -}}
                            {%- if forloop.last != true %} / {% endif -%}
                          {%- endfor -%}
                        </p>
                      {%- endif -%}

                      {% comment %} Don't show properties if this is a feature product {% endcomment %}
                      {%- if item.properties._feature == blank -%}
                        {%- for property in item.properties -%}
                          {%- assign property_first_char = property.first | slice: 0 -%}
                          {%- if property.last != blank and property_first_char != '_' -%}
                            <p class="cart-items__properties">
                              {%- if property.last contains '/uploads/' -%}
                                <a href="{{ property.last }}">{{ property.last | split: '/' | last }}</a>
                              {%- else -%}
                                {{ property.last }}
                              {%- endif -%}
                            </p>
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}
                    {%- endif -%}
                  </div>
                </a>

                <div class="cart-items__controls">
                  <div class="cart-items__price-container">
                    {%- comment -%} Show price display for all items, but with different formatting for discount items {%- endcomment -%}
                    {%- liquid
                      if settings.currency_code_enabled_cart_items
                        assign final_price = item.final_line_price | money_with_currency
                        assign original_price = item.original_line_price | money_with_currency
                      else
                        assign final_price = item.final_line_price | money
                        assign original_price = item.original_line_price | money
                      endif
                    -%}
                    
                    {%- if item.final_line_price == 0 or item.final_line_price < item.original_line_price -%}
                      {%- comment -%} Discount line items: show final price with background and original price with strikethrough {%- endcomment -%}
                      <div class="cart-items__final-price">
                        <p class="cart-items__price cart-secondary-typography">{{ final_price }}</p>
                      </div>
                      <p class="cart-items__original-price cart-secondary-typography">{{ original_price }}</p>
                    {%- else -%}
                      {%- comment -%} Regular items: show normal price without special formatting {%- endcomment -%}
                      <p class="cart-items__price cart-secondary-typography">{{ final_price }}</p>
                    {%- endif -%}
                  </div>

                  <div class="cart-items__quantity-section">
                    <div class="cart-items__quantity-container">
                      {% assign can_update_quantity = item.instructions.can_update_quantity
                        | default: true, allow_false: true
                      %}
                      {% render 'quantity-selector',
                        product: item.product,
                        in_cart_quantity: item.quantity,
                        line_index: item.index,
                        min: 0,
                        class: 'cart-primary-typography',
                        can_update_quantity: can_update_quantity
                      %}
                    </div>

                    <button
                      class="button button--tertiary cart-items__remove"
                      type="button"
                      aria-label="{{ 'accessibility.remove_item' | t: title: item.title | escape }}"
                      on:click="/onLineItemRemove/{{ item.index | plus: 1 }}"
                      {% assign can_remove = item.instructions.can_remove | default: true, allow_false: true %}
                      {% if can_remove == false %}
                        hidden
                      {% endif %}
                    >
                      {{- 'icon-delete.svg' | inline_asset_content -}}
                      <span class="visually-hidden">Remove</span>
                    </button>
                  </div>
                </div>
              </div>

              {%- if item.discount_allocations.size > 0 -%}
                <div class="cart-items__discount-allocation">
                  {% if settings.show_buy_x_get_y_discount %}
                    {%- for discount_allocation in item.discount_allocations -%}
                      <div class="cart-items__discount-item">
                        <svg 
                          xmlns="http://www.w3.org/2000/svg" 
                          viewBox="0 0 24 24" 
                          fill="currentColor" 
                          aria-hidden="true"
                          class="cart-items__discount-icon"
                        >
                          <path 
                            fill-rule="evenodd"
                            d="M1.5 6.375c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v3.026a.75.75 0 0 1-.375.65 2.249 2.249 0 0 0 0 3.898.75.75 0 0 1 .375.65v3.026c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 0 1 1.5 17.625v-3.026a.75.75 0 0 1 .374-.65 2.249 2.249 0 0 0 0-3.898.75.75 0 0 1-.374-.65V6.375Zm15-1.125a.75.75 0 0 1 .75.75v.75a.75.75 0 0 1-1.5 0V6a.75.75 0 0 1 .75-.75Zm.75 4.5a.75.75 0 0 0-1.5 0v.75a.75.75 0 0 0 1.5 0v-.75Zm-.75 3a.75.75 0 0 1 .75.75v.75a.75.75 0 0 1-1.5 0v-.75a.75.75 0 0 1 .75-.75Zm.75 4.5a.75.75 0 0 0-1.5 0V18a.75.75 0 0 0 1.5 0v-.75ZM6 12a.75.75 0 0 1 .75-.75H12a.75.75 0 0 1 0 1.5H6.75A.75.75 0 0 1 6 12Zm.75 2.25a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5h-3Z"
                            clip-rule="evenodd"
                          ></path>
                        </svg>
                        <span class="cart-items__discount-title">{{ discount_allocation.discount_application.title }}</span>
                        {%- comment -%} Only show amount for discount line items (when final price is 0 or less than original) {%- endcomment -%}
                        {%- if item.final_line_price == 0 or item.final_line_price < item.original_line_price -%}
                          <span class="cart-items__discount-amount">
                            (-{{ discount_allocation.amount | money }})
                          </span>
                        {%- endif -%}
                      </div>
                    {%- endfor -%}
                  {% else %}
                    {%- for discount_allocation in item.discount_allocations -%}
                      <span class="cart-items__discount-title">{{ discount_allocation.discount_application.title }}</span>
                    {%- endfor -%}
                  {% endif %}
                </div>
              {%- endif -%}

              <div
                class="cart-items__error hidden"
                ref="cartItemErrorContainer-{{ item.index | plus: 1 }}"
              >
                <div
                  class="cart-item__error"
                  role="alert"
                >
                  <span class="svg-wrapper">
                    {{- 'icon-error.svg' | inline_asset_content -}}
                  </span>
                  <small
                    class="cart-item__error-text cart-primary-typography"
                    ref="cartItemError-{{ item.index | plus: 1 }}"
                  ></small>
                </div>
              </div>
            </li>
          {% endfor %}
        </ul>
      </div>
    </form>
  {%- endif -%}
</div>

{% stylesheet %}
  .cart-items {
    --cart-item-media-width: 4rem;
    --cart-item-gap: var(--gap-md);
    --cart-item-padding: var(--padding-md);
    --cart-item-discount-highlight-border-radius: 0.25rem;

    container-name: cart-items;
    container-type: inline-size;
    width: 100%;
  }

  .cart-items-disabled {
    pointer-events: none;
  }

  .cart-items__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--cart-item-gap);
  }

  .cart-items__item {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    border-bottom: 1px solid var(--color-border);
    padding-bottom: var(--cart-item-padding);
    min-height: calc(var(--cart-item-media-width) + var(--padding-md) * 5 + var(--cart-item-padding));
  }

  .cart-items__item:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .cart-items__item-content {
    position: relative;
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--gap-md);
    padding: var(--padding-md) var(--padding-xs);
  }

  .cart-items__product-link {
    display: flex;
    flex: 3;
    flex-direction: row;
    gap: var(--gap-sm);
    text-decoration: none;
    color: inherit;
    z-index: 30;
  }

  .cart-items__media-container {
    position: relative;
    height: var(--cart-item-media-width);
    width: var(--cart-item-media-width);
    cursor: pointer;
    overflow: hidden;
    border-radius: 0.375rem;
    border: 1px solid var(--color-border);
    background-color: var(--color-border);
    flex-shrink: 0;
  }

  .cart-items__media-image {
    height: 100%;
    width: 100%;
    object-fit: cover;
    object-position: center;
  }

  .cart-items__details {
    display: flex;
    flex: 1;
    flex-direction: column;
    align-items: flex-start;
    font-size: var(--cart-font-size--md);
    font-weight: 500;
  }

  .cart-items__title {
    line-height: 1.25;
    color: var(--color-foreground);
    text-transform: var(--product-title-case);
    margin: 0;
  }

  .cart-items__variants,
  .cart-items__properties {
    font-size: var(--cart-font-size--sm);
    color: rgb(var(--color-foreground-rgb) / 0.6);
    margin: 0;
    margin-top: var(--margin-2xs);
  }

  .cart-items__variants a,
  .cart-items__properties a {
    color: inherit;
    text-decoration: none;
  }

  .cart-items__variants a:hover,
  .cart-items__properties a:hover {
    text-decoration: underline;
  }

  .cart-items__controls {
    display: flex;
    height: var(--cart-item-media-width);
    flex: 1;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    gap: var(--gap-xs);
  }

  .cart-items__price-container {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: var(--gap-xs);
    border-radius: 0.125rem;
    text-align: right;
    font-size: var(--cart-font-size--sm);
    font-weight: 500;
    flex-direction: row;
  }

  .cart-items__final-price {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: var(--gap-xs);
    border-radius: var(--cart-item-discount-highlight-border-radius);
    padding: var(--padding-2xs) var(--padding-xs);
    background-color: var(--buy-x-get-y-icon-active-bg, var(--color-primary));
    color: var(--color-primary-button-text);
  }

  .cart-items__price {
    margin: 0;
    font-size: var(--cart-font-size--sm);
    font-weight: 500;
  }

  .cart-items__original-price {
    margin: 0;
    font-size: var(--cart-font-size--sm);
    font-weight: 500;
    text-decoration: line-through;
    color: rgb(var(--color-foreground-rgb) / 0.6);
  }

  .cart-items__quantity-section {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .cart-items__quantity-container {
    display: flex;
    height: 2.25rem;
    flex-direction: row;
    align-items: center;
    border-radius: 9999px;
    border: 1px solid var(--color-border);
  }

  .cart-items__quantity-container .quantity-selector {
    display: flex;
    height: 100%;
    flex-direction: row;
    align-items: center;
    border-radius: 9999px;
    border: 1px solid var(--color-border);
    font-size: var(--cart-font-size--sm);
  }

  .cart-items__quantity-container .quantity-selector__button {
    display: flex;
    height: 100%;
    min-width: 2.25rem;
    max-width: 2.25rem;
    flex: none;
    align-items: center;
    justify-content: center;
    border-radius: 9999px;
    padding: 0 var(--padding-xs);
    transition: all 0.2s ease;
    border: none;
    background: transparent;
    cursor: pointer;
  }

  .cart-items__quantity-container .quantity-selector__button:hover {
    border-color: var(--color-foreground);
    opacity: 0.8;
  }

  .cart-items__quantity-container .quantity-selector__button:first-child {
    margin-left: auto;
  }

  .cart-items__quantity-container .quantity-selector__input {
    width: 1.5rem;
    text-align: center;
    border: none;
    background: transparent;
    font-size: var(--cart-font-size--sm);
    padding: 0;
  }

  .cart-items__quantity-container .quantity-selector__input:focus {
    outline: none;
  }

  .cart-items__remove {
    background-color: transparent;
    color: var(--color-foreground);
    width: var(--minimum-touch-target);
    height: var(--minimum-touch-target);
    justify-content: center;
    box-shadow: none;
    padding: 0;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cart-items__remove:hover {
    opacity: 0.7;
  }

  .cart-items__remove svg {
    width: var(--icon-size-sm);
    height: var(--icon-size-sm);
  }

  /* Error message */
  .cart-items__error {
    display: flex;
    align-items: flex-start;
    width: 100%;
    margin-top: var(--margin-xs);
    opacity: 1;
    overflow: hidden;
    transform: translateY(0);
    transition: opacity var(--drawer-animation-speed) var(--animation-easing),
      transform var(--drawer-animation-speed) var(--animation-easing);

    @starting-style {
      opacity: 0;
      transform: translateY(-0.5rem);
    }
  }

  .cart-item__error {
    display: flex;
    align-items: flex-start;
    width: 100%;
    font-size: var(--cart-font-size--sm);
    padding-block: var(--padding-2xs);
  }

  .cart-item__error .svg-wrapper {
    flex-shrink: 0;
    width: var(--icon-size-xs);
    height: var(--icon-size-xs);
    margin-inline: var(--margin-3xs) var(--margin-xs);
    margin-block-start: var(--margin-3xs);
  }

  .cart-items__item.removing {
    overflow: hidden;
    animation: removeRow calc(var(--animation-speed) * 2) var(--animation-easing) forwards;
    animation-delay: var(--animation-speed);
  }

  @keyframes removeRow {
    0% {
      height: var(--row-height);
    }

    100% {
      opacity: 0;
      height: 0;
      padding-bottom: 0;
      margin-bottom: 0;
      border-color: transparent;
    }
  }

  html:active-view-transition-type(page-navigation) .cart-items__item {
    view-transition-name: none !important;
  }

  .cart-items__item.cart-items__nested-line .cart-items__product-link {
    width: 60%;
    justify-self: right;
  }

  .cart-items__empty-button {
    margin-top: var(--margin-md);
    padding-inline: var(--padding-4xl);
    padding-block: var(--padding-lg);
  }

  /* Responsive design */
  @container cart-items (min-width: 720px) {
    .cart-items__item-content {
      align-items: center;
    }

    .cart-items__controls {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      height: auto;
    }

    .cart-items__price-container {
      justify-content: flex-end;
    }

    .cart-items__quantity-container {
      margin-top: 0;
    }
  }

  /* Utility classes */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .hidden {
    display: none;
  }

  .cart-primary-typography {
    font-family: var(--cart-primary-font-family);
    font-style: var(--cart-primary-font-style);
    font-weight: var(--cart-primary-font-weight);
  }

  .cart-secondary-typography {
    font-family: var(--cart-secondary-font-family);
    font-style: var(--cart-secondary-font-style);
    font-weight: var(--cart-secondary-font-weight);
  }

  /* Remove animation */
  .remove-icon-bottom,
  .remove-icon-top {
    transition: transform var(--animation-speed) var(--animation-easing);
  }

  .cart-items__remove:hover .remove-icon-top {
    transform: translate(calc(-1 * var(--icon-stroke-width)), var(--icon-stroke-width)) rotate(-15deg);
  }

  .cart-items__remove:is(:hover, :active) .remove-icon-bottom {
    transform: translateY(var(--icon-stroke-width));
  }

  .cart-items__item.removing .remove-icon-bottom {
    transform: translateY(0);
  }

  .cart-items__item.removing .remove-icon-top {
    animation: removeButtonClickedIconTop var(--animation-speed) var(--animation-easing) forwards;
  }

  @keyframes removeButtonClickedIconTop {
    50% {
      transform: translate(0, calc(-1 * var(--icon-stroke-width)));
    }

    100% {
      transform: translate(0, 0);
    }
  }

  /* Discount allocation styles */

  .cart-items__discount-allocation {
    padding: 0 var(--padding-xs);
  }

  .cart-items__discount-item {
    display: inline-flex;
    width: fit-content;
    align-items: center;
    gap: var(--gap-2xs);
    padding: var(--padding-2xs);
    border-radius: var(--cart-item-discount-highlight-border-radius);
    text-align: center;
    font-size: var(--font-size--2xs);
    background-color: var(--buy-x-get-y-icon-active-bg, var(--color-primary));
    color: var(--color-primary-button-text);
  }

  .cart-items__discount-icon {
    height: 1rem;
    width: 1rem;
  }

  .cart-items__discount-title {
    font-size: var(--font-size--xs);
    font-weight: 500;
  }

  .cart-items__discount-amount {
    display: flex;
    font-size: var(--font-size--xs);
    font-weight: 500;
  }
{% endstylesheet %}
